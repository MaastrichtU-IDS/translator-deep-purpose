import os
os.environ["CUDA_VISIBLE_DEVICES"] = "2"

from datetime import datetime
from DeepPurpose import utils

from trapi_predict_kit import load


default_drug = 'CC1=C2C=C(C=CC2=NN1)C3=CC(=CN=C3)OCC(CC4=CC=CC=C4)N'

def get_predictions(input_id: str = default_drug, options: dict = {}) -> dict:
    time_start = datetime.now()
    print(f"Started at {time_start.strftime('%d/%m/%Y %H:%M:%S')}")

    X_drug = [input_id]
    # TODO: handle more targets, where to get the y?
    X_target = ['MKKFFDSRREQGGSGLGSGSSGGGGSTSGLGSGYIGRVFGIGRQQVTVDEVLAEGGFAIVFLVRTSNGMKCALKRMFVNNEHDLQVCKREIQIMRDLSGHKNIVGYIDSSINNVSSGDVWEVLILMDFCRGGQVVNLMNQRLQTGFTENEVLQIFCDTCEAVARLHQCKTPIIHRDLKVENILLHDRGHYVLCDFGSATNKFQNPQTEGVNAVEDEIKKYTTLSYRAPEMVNLYSGKIITTKADIWALGCLLYKLCYFTLPFGESQVAICDGNFTIPDNSRYSQDMHCLIRYMLEPDPDKRPDIYQVSYFSFKLLKKECPIPNVQNSPIPAKLPEPVKASEAAAKKTQPKARLTDPIPTTETSIAPRQRPKAGQTQPNPGILPIQPALTPRKRATVQPPPQAAGSSNQPGLLASVPQPKPQAPPSQPLPQTQAKQPQAPPTPQQTPSTQAQGLPAQAQATPQHQQQLFLKQQQQQQQPPPAQQQPAGTFYQQQQAQTQQFQAVHPATQKPAIAQFPVVSQGGSQQQLMQNFYQQQQQQQQQQQQQQLATALHQQQLMTQQAALQQKPTMAAGQQPQPQPAAAPQPAPAQEPAIQAPVRQQPKVQTTPPPAVQGQKVGSLTPPSSPKTQRAGHRRILSDVTHSAVFGVPASKSTQLLQAAAAEASLNKSKSATTTPSGSPRTSQQNVYNPSEGSTWNPFDDDNFSKLTAEELLNKDFAKLGEGKHPEKLGGSAESLIPGFQSTQGDAFATTSFSAGTAEKRKGGQTVDSGLPLLSVSDPFIPLQVPDAPEKLIEGLKSPDTSLLLPDLLPMTDPFGSTSDAVIEKADVAVESLIPGLEPPVPQRLPSQTESVTSNRTDSLTGEDSLLDCSLLSNPTTDLLEEFAPTAISAPVHKAAEDSNLISGFDVPEGSDKVAEDEFDPIPVLITKNPQGGHSRNSSGSSESSLPNLARSLLLVDQLIDL']
    y = [7.365]

    model = load(path="models/deeppurpose")
    drug_encoding, target_encoding = 'MPNN', 'CNN'

    X_pred = utils.data_process(
        X_drug, X_target, y,
        drug_encoding, target_encoding, 
        split_method='no_split'
    )
    y_pred = model.predict(X_pred)
    print('The predicted score is ' + str(y_pred))

    print(f"Ended at {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
    print(f"ðŸ•› Complete runtime: {str(datetime.now() - time_start)}")

if __name__ == '__main__':
    get_predictions()